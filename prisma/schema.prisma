generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The main business process register model
model BusinessProcessRegister {
  id                Int            @id @default(autoincrement())
  business_area     String?        @db.VarChar(50)
  sub_business_area String?        @db.VarChar(100)
  process_name      String?        @db.VarChar(100)
  document_name     String?        @db.VarChar(100)
  version           String?        @db.VarChar(20)
  progress          String?        @db.VarChar(20)
  doc_status        String?        @db.VarChar(20)
  status_percentage Decimal?       @db.Decimal(5, 0)
  priority          String?        @db.VarChar(20)
  target_date       DateTime?      @db.Date
  process_owner     String?        @db.VarChar(20)
  update_date       DateTime?      @db.Date
  remarks           String?        @db.Text
  review_date       DateTime?      @db.Date
  file_url          String?        @db.VarChar(500)
  file_name         String?        @db.VarChar(255)
  file_size         BigInt?
  file_type         String?        @db.VarChar(100)
  uploaded_at       DateTime?      @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?      @db.Timestamp(0)
  deleted_by        Int?
  businessareas     BusinessAreas? @relation(fields: [business_area], references: [business_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_bpr_business_area")
  deletedBy         User?          @relation("BusinessProcessDeletedBy", fields: [deleted_by], references: [id])

  @@index([business_area], map: "fk_bpr_business_area")
  @@index([deleted_at], map: "idx_deleted_at")
  @@index([deleted_by], map: "idx_deleted_by")
  @@map("businessprocessregister")
}

/// The business quality objectives model
model BusinessQualityObjective {
  id                        Int            @id @default(autoincrement())
  category                  String?        @db.VarChar(100)
  business_area             String?        @db.VarChar(50)
  sub_business_area         String?        @db.VarChar(100)
  qms_main_objectives       String?        @db.Text
  qms_objective_description String?        @db.Text
  kpi_or_sla_targets        String?        @db.Text
  performance_monitoring    String?        @db.Text
  proof_of_measuring        String?        @db.VarChar(20)
  proof_of_reporting        String?        @db.VarChar(20)
  frequency                 String?        @db.VarChar(20)
  responsible_person_team   String?        @db.VarChar(100)
  review_date               DateTime?      @db.Date
  progress                  String?        @db.VarChar(20)
  status_percentage         Int?
  doc_status                String?        @db.VarChar(20)
  file_url                  String?        @db.VarChar(500)
  file_name                 String?        @db.VarChar(255)
  file_size                 BigInt?
  file_type                 String?        @db.VarChar(100)
  uploaded_at               DateTime?      @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?      @db.Timestamp(0)
  deleted_by                Int?
  businessareas             BusinessAreas? @relation(fields: [business_area], references: [business_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_bqo_business_area")
  deletedBy                 User?          @relation("BusinessQualityObjectiveDeletedBy", fields: [deleted_by], references: [id])

  @@index([business_area], map: "fk_bqo_business_area")
  @@index([deleted_at], map: "idx_deleted_at")
  @@index([deleted_by], map: "idx_deleted_by")
  @@map("businessqualityobjectives")
}

model TrainingSession {
  id            Int            @id @default(autoincrement())
  business_area String?        @db.VarChar(50)
  sessions      String         @db.VarChar(50)
  session_date  DateTime       @db.Date
  remarks       String         @db.Text
  businessareas BusinessAreas? @relation(fields: [business_area], references: [business_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_ts_business_area")

  @@index([business_area], map: "fk_ts_business_area")
  @@map("trainingsessions")
}

model BusinessDocumentRegister {
  id                 Int            @id @default(autoincrement())
  business_area      String?        @db.VarChar(50)
  sub_business_area  String?        @db.VarChar(100)
  document_name      String?        @db.VarChar(100)
  name_and_numbering String?        @db.VarChar(100)
  document_type      String?        @db.VarChar(20)
  version            String?        @db.VarChar(20)
  progress           String?        @db.VarChar(20)
  doc_status         String?        @db.VarChar(20)
  status_percentage  Decimal?       @db.Decimal(5, 0)
  priority           String?        @db.VarChar(20)
  target_date        DateTime?      @db.Date
  document_owner     String?        @db.VarChar(20)
  update_date        DateTime?      @db.Date
  remarks            String?        @db.Text
  review_date        DateTime?      @db.Date
  file_url           String?        @db.VarChar(500)
  file_name          String?        @db.VarChar(255)
  file_size          BigInt?
  file_type          String?        @db.VarChar(100)
  uploaded_at        DateTime?      @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?      @db.Timestamp(0)
  deleted_by         Int?
  businessareas      BusinessAreas? @relation(fields: [business_area], references: [business_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_bdr_business_area")
  deletedBy          User?          @relation("BusinessDocumentDeletedBy", fields: [deleted_by], references: [id])

  @@index([business_area], map: "fk_bdr_business_area")
  @@index([deleted_at], map: "idx_deleted_at")
  @@index([deleted_by], map: "idx_deleted_by")
  @@map("businessdocumentregister")
}

model PerformanceMonitoringControl {
  id                  Int            @id @default(autoincrement())
  business_area       String?        @db.VarChar(50)
  sub_business_area   String?        @db.VarChar(100)
  Name_reports        String?        @db.VarChar(100)
  doc_type            String?        @db.VarChar(50)
  priority            String?        @db.VarChar(20)
  doc_status          String?        @db.VarChar(100)
  progress            String?        @db.VarChar(100)
  status_percentage   Decimal?       @db.Decimal(5, 0)
  target_date         DateTime?      @db.Date
  proof               String?        @db.VarChar(20)
  frequency           String?        @db.VarChar(50)
  responsible_persons String?        @db.VarChar(50)
  remarks             String?        @db.Text
  file_url            String?        @db.VarChar(500)
  file_name           String?        @db.VarChar(255)
  file_size           BigInt?
  file_type           String?        @db.VarChar(100)
  uploaded_at         DateTime?      @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?      @db.Timestamp(0)
  deleted_by          Int?
  businessareas       BusinessAreas? @relation(fields: [business_area], references: [business_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_pmc_business_area")
  deletedBy           User?          @relation("PerformanceMonitoringDeletedBy", fields: [deleted_by], references: [id])

  @@index([business_area], map: "fk_pmc_business_area")
  @@index([deleted_at], map: "idx_deleted_at")
  @@index([deleted_by], map: "idx_deleted_by")
  @@map("performancemonitoringcontrol")
}

model RacmMatrixHistory {
  id                        Int            @id @default(autoincrement())
  racm_matrix_id            Int
  inherent_risk_score       Int?
  residual_risk_overall_score Int?
  change_date               DateTime       @default(now()) @db.Timestamp(0)
  change_type               String         @db.VarChar(20) // 'created', 'updated'
  created_at                DateTime       @default(now()) @db.Timestamp(0)
  
  racmMatrix                RacmMatrix     @relation(fields: [racm_matrix_id], references: [id], onDelete: Cascade)

  @@index([racm_matrix_id], map: "fk_rmh_racm_matrix_id")
  @@index([change_date], map: "idx_change_date")
  @@map("racm_matrix_history")
}

model RacmMatrix {
  id                        Int            @id @default(autoincrement())
  process_name              String         @db.VarChar(255)
  activity_description      String?        @db.Text
  issue_description         String         @db.Text
  issue_type                String?        @db.VarChar(100)
  inherent_risk_likeliness  Int?
  inherent_risk_impact      Int?
  inherent_risk_score       Int?
  control_description       String?        @db.Text
  control_type              String?        @db.VarChar(20)
  control_owner             String?        @db.VarChar(255)
  control_effectiveness     String?        @db.VarChar(20)
  residual_risk_likeliness  Int?
  status                    String?        @db.VarChar(20)
  created_at                DateTime?      @default(now()) @db.Timestamp(0)
  updated_at                DateTime?      @default(now()) @updatedAt @db.Timestamp(0)
  business_area             String?        @db.VarChar(50)
  doc_status                String?        @db.VarChar(20)
  file_url                  String?        @db.VarChar(500)
  file_name                 String?        @db.VarChar(255)
  file_size                 BigInt?
  file_type                 String?        @db.VarChar(100)
  uploaded_at               DateTime?      @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?      @db.Timestamp(0)
  deleted_by                Int?
  control_progress          Decimal?       @db.Decimal(5, 0)
  control_target_date       DateTime?      @db.Date
  residual_risk_impact      Int?
  residual_risk_overall_score Int?
  businessareas             BusinessAreas? @relation(fields: [business_area], references: [business_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_rm_business_area")
  deletedBy                 User?          @relation("RacmMatrixDeletedBy", fields: [deleted_by], references: [id])
  history                   RacmMatrixHistory[]

  @@index([business_area], map: "fk_rm_business_area")
  @@index([deleted_at], map: "idx_deleted_at")
  @@index([deleted_by], map: "idx_deleted_by")
  @@map("racm_matrix")
}

model User {
  id                  Int                   @id @default(autoincrement())
  email               String                @unique(map: "email") @db.VarChar(50)
  username            String                @unique(map: "username") @db.VarChar(20)
  password            String                @db.VarChar(255)
  business_area       String?               @db.VarChar(50)
  created_at          DateTime?             @default(now()) @db.Timestamp(0)
  user_business_areas user_business_areas[]
  businessareas       BusinessAreas?        @relation(fields: [business_area], references: [business_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_use_business_area")
  deletedBusinessProcesses BusinessProcessRegister[] @relation("BusinessProcessDeletedBy")
  deletedBusinessDocuments BusinessDocumentRegister[] @relation("BusinessDocumentDeletedBy")
  deletedBusinessQualityObjectives BusinessQualityObjective[] @relation("BusinessQualityObjectiveDeletedBy")
  deletedPerformanceMonitoring PerformanceMonitoringControl[] @relation("PerformanceMonitoringDeletedBy")
  deletedRacmMatrix RacmMatrix[] @relation("RacmMatrixDeletedBy")

  @@index([business_area], map: "fk_use_business_area")
  @@map("users")
}

model BusinessAreas {
  business_area                String                         @id @db.VarChar(50)
  businessdocumentregister     BusinessDocumentRegister[]
  businessprocessregister      BusinessProcessRegister[]
  businessqualityobjectives    BusinessQualityObjective[]
  performancemonitoringcontrol PerformanceMonitoringControl[]
  racm_matrix                  RacmMatrix[]
  trainingsessions             TrainingSession[]
  user_business_areas          user_business_areas[]
  users                        User[]

  @@map("businessareas")
}

model BusinessProcessVersions {
  id                Int      @id @default(autoincrement())
  businessProcessId String
  versionNumber     String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("businessprocessversions")
}

/// QMS Internal Self-Assessment models
model QMSAssessment {
  id                       Int                 @id @default(autoincrement())
  approvalDate             DateTime?           @db.Date
  approvedByGoverningBody  String?             @db.VarChar(100)
  assessmentConductedBy    String?             @db.VarChar(100)
  assessment_date          DateTime?           @db.Date
  assessmentDateRangeEnd   String?             @db.VarChar(20)
  assessmentDateRangeStart String?             @db.VarChar(20)
  assessor_name            String?             @db.VarChar(100)
  assessorDate             DateTime?           @db.Date
  business_area            String?             @db.VarChar(100)
  created_at               DateTime?           @default(now()) @db.Timestamp(0)
  section1Data             String?             @db.Text
  section2Data             String?             @db.Text
  section3Data             String?             @db.Text
  section4Data             String?             @db.Text
  status                   String              @default("draft") @db.VarChar(20)
  updatedAt                DateTime            @default(now()) @db.Timestamp(0)
  approval                 QMSApproval[]
  items                    QMSAssessmentItem[]

  @@map("qms_assessments")
}

model QMSAssessmentItem {
  id               Int            @id @default(autoincrement())
  assessment_id    Int?
  section          String?        @db.VarChar(50)
  clause_reference String?        @db.VarChar(20)
  item_number      String?        @db.VarChar(10)
  item_description String?        @db.Text
  status           QMSStatus
  comment          String?        @db.Text
  assessment       QMSAssessment? @relation(fields: [assessment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "qms_assessment_items_ibfk_1")

  @@index([assessment_id], map: "assessment_id")
  @@map("qms_assessment_items")
}

model QMSApproval {
  id             Int            @id @default(autoincrement())
  assessment_id  Int?
  conducted_by   String?        @db.VarChar(100)
  conducted_date DateTime?      @db.Date
  approved_by    String?        @db.VarChar(100)
  approved_date  DateTime?      @db.Date
  assessment     QMSAssessment? @relation(fields: [assessment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "qms_approvals_ibfk_1")

  @@index([assessment_id], map: "assessment_id")
  @@map("qms_approvals")
}

model QMSSection {
  id               Int     @id @default(autoincrement())
  section_number   String? @db.VarChar(10)
  title            String? @db.VarChar(255)
  clause_reference String? @db.VarChar(50)

  @@map("qms_sections")
}

model QMSStatusOption {
  code    QMSStatus @id
  meaning String?   @db.VarChar(100)

  @@map("qms_status_options")
}

model user_business_areas {
  id            Int           @id @default(autoincrement())
  user_id       Int
  business_area String        @db.VarChar(50)
  created_at    DateTime?     @default(now()) @db.Timestamp(0)
  users         User          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_business_areas_ibfk_1")
  businessareas BusinessAreas @relation(fields: [business_area], references: [business_area], onDelete: Cascade, onUpdate: NoAction, map: "user_business_areas_ibfk_2")

  @@unique([user_id, business_area], map: "unique_user_business")
  @@index([business_area], map: "business_area")
}

enum QMSStatus {
  C
  NC
  OFI
  NA
}
